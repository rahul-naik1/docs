"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1817],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,N=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(N,i(i({ref:t},p),{},{components:n})):r.createElement(N,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3574:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return u}});var r=n(87462),a=n(63366),o=(n(67294),n(3905)),i=["components"],s={sidebar_position:13,title:"INSERT"},l=void 0,c={unversionedId:"c8ql/operations/insert",id:"c8ql/operations/insert",title:"INSERT",description:"The INSERT keyword can be used to insert new documents into a collection. On a single server, an insert operation is executed transactionally in an all-or-nothing fashion.",source:"@site/docs/c8ql/operations/insert.md",sourceDirName:"c8ql/operations",slug:"/c8ql/operations/insert",permalink:"/docs/c8ql/operations/insert",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/master/docs/c8ql/operations/insert.md",tags:[],version:"current",sidebarPosition:13,frontMatter:{sidebar_position:13,title:"INSERT"},sidebar:"tutorialSidebar",previous:{title:"REPLACE",permalink:"/docs/c8ql/operations/replace"},next:{title:"UPSERT",permalink:"/docs/c8ql/operations/upsert"}},p={},u=[{value:"Setting query options",id:"setting-query-options",level:2},{value:"Returning the inserted documents",id:"returning-the-inserted-documents",level:2}],d={toc:u};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"INSERT")," keyword can be used to insert new documents into a collection. On a single server, an insert operation is executed transactionally in an all-or-nothing fashion. "),(0,o.kt)("p",null,"For sharded collections, the entire query and/or insert operation may not be transactional, especially if it involves different shards and/or DB-Servers."),(0,o.kt)("p",null,"Each ",(0,o.kt)("inlineCode",{parentName:"p"},"INSERT")," operation is restricted to a single collection, and the ",(0,o.kt)("a",{parentName:"p",href:"/docs/c8ql/operations/insert"},"collection name")," must not be dynamic. Only a single ",(0,o.kt)("inlineCode",{parentName:"p"},"INSERT")," statement per collection is allowed per C8QL query, and it cannot be followed by read or write operations that access the same collection, by traversal operations, or C8QL functions that can read documents."),(0,o.kt)("p",null,"The syntax for an insert operation is:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"INSERT document INTO collection [ OPTIONS options ]\n")),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"IN")," keyword is allowed in place of ",(0,o.kt)("inlineCode",{parentName:"p"},"INTO")," and has the same meaning."))),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"collection")," must contain the name of the collection into which the documents should be inserted. ",(0,o.kt)("em",{parentName:"p"},"document")," is the document to be inserted, and it may or may not contain a ",(0,o.kt)("em",{parentName:"p"},"_key")," attribute. If no ",(0,o.kt)("em",{parentName:"p"},"_key")," attribute is provided, GDN will auto-generate a value for ",(0,o.kt)("em",{parentName:"p"},"_key")," value. Inserting a document will also auto-generate a document revision number for the document."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"FOR i IN 1..100\n  INSERT { value: i } INTO numbers\n")),(0,o.kt)("p",null,"An insert operation can also be performed without a ",(0,o.kt)("inlineCode",{parentName:"p"},"FOR")," loop to insert a single document:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"INSERT { value: 1 } INTO numbers\n")),(0,o.kt)("p",null,"When inserting into an ",(0,o.kt)("a",{parentName:"p",href:"/docs/c8ql/operations/insert"},"edge collection"),", it is mandatory to specify the attributes ",(0,o.kt)("em",{parentName:"p"},"_from")," and ",(0,o.kt)("em",{parentName:"p"},"_to")," in document:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"FOR u IN users\n  FOR p IN products\n    FILTER u._key == p.recommendedBy\n    INSERT { _from: u._id, _to: p._id } INTO recommendations\n")),(0,o.kt)("h2",{id:"setting-query-options"},"Setting query options"),(0,o.kt)("p",null,"The ",(0,o.kt)("em",{parentName:"p"},"OPTIONS")," keyword followed by an object with query options can optionally be provided in an ",(0,o.kt)("inlineCode",{parentName:"p"},"INSERT")," operation."),(0,o.kt)("p",null,"It can be used to suppress query errors that may occur when violating unique key constraints:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"FOR i IN 1..1000\n  INSERT {\n    _key: CONCAT('test', i),\n    name: \"test\",\n    foobar: true\n  } INTO users OPTIONS { ignoreErrors: true }\n")),(0,o.kt)("p",null,"To make sure data are durable when an insert query returns, there is the ",(0,o.kt)("em",{parentName:"p"},"waitForSync")," query option:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"FOR i IN 1..1000\n  INSERT {\n    _key: CONCAT('test', i),\n    name: \"test\",\n    foobar: true\n  } INTO users OPTIONS { waitForSync: true }\n")),(0,o.kt)("p",null,"If you want to replace existing documents with documents having the same key there is the ",(0,o.kt)("em",{parentName:"p"},"overwrite"),' query option. This will let you safely replace the documents instead of raising an "unique constraint violated error":'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"FOR i IN 1..1000\n  INSERT {\n    _key: CONCAT('test', i),\n    name: \"test\",\n    foobar: true\n  } INTO users OPTIONS { overwrite: true }\n")),(0,o.kt)("p",null,"Different write operations on the same collection do not block each other, as long as there are no ",(0,o.kt)("em",{parentName:"p"},"write-write conficts")," on the same documents. From an application development perspective it can be desired to have exclusive write access on collections, to simplify the development. "),(0,o.kt)("p",null,"Use the ",(0,o.kt)("em",{parentName:"p"},"exclusive")," option to achieve this effect on a per query basis:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"FOR doc IN collection\n  INSERT { myval: doc.val + 1 } INTO users \n  OPTIONS { exclusive: true }\n")),(0,o.kt)("h2",{id:"returning-the-inserted-documents"},"Returning the inserted documents"),(0,o.kt)("p",null,"The inserted documents can also be returned by the query. In this case, the ",(0,o.kt)("inlineCode",{parentName:"p"},"INSERT")," statement can be a ",(0,o.kt)("inlineCode",{parentName:"p"},"RETURN")," statement (intermediate ",(0,o.kt)("inlineCode",{parentName:"p"},"LET")," statements are allowed, too). To refer to the inserted documents, the ",(0,o.kt)("inlineCode",{parentName:"p"},"INSERT")," statement introduces a pseudo-value named ",(0,o.kt)("inlineCode",{parentName:"p"},"NEW"),". "),(0,o.kt)("p",null,"The documents contained in ",(0,o.kt)("inlineCode",{parentName:"p"},"NEW")," will contain all attributes, even those auto-generated by the database (e.g. ",(0,o.kt)("inlineCode",{parentName:"p"},"_id"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"_key"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"_rev"),")."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"INSERT document INTO collection RETURN NEW\n")),(0,o.kt)("p",null,"Following is an example using a variable named ",(0,o.kt)("inlineCode",{parentName:"p"},"inserted")," to return the inserted documents. For each inserted document, the document key is returned:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"FOR i IN 1..100\n  INSERT { value: i }\n  INTO users\n  LET inserted = NEW\n  RETURN inserted._key\n")))}m.isMDXComponent=!0}}]);