"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7493],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return d}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),u=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=u(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),m=u(n),d=r,b=m["".concat(p,".").concat(d)]||m[d]||c[d]||l;return n?a.createElement(b,i(i({ref:t},s),{},{components:n})):a.createElement(b,i({ref:t},s))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var u=2;u<l;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},15094:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return o},metadata:function(){return u},toc:function(){return c}});var a=n(87462),r=n(63366),l=(n(67294),n(3905)),i=["components"],o={},p="Google Pub-Sub",u={unversionedId:"cep/reference/extensions/io/gcp-pubsub",id:"cep/reference/extensions/io/gcp-pubsub",title:"Google Pub-Sub",description:"This an extension that receives and publishes events from/to Google Pub/Sub.",source:"@site/docs/cep/reference/extensions/io/gcp-pubsub.md",sourceDirName:"cep/reference/extensions/io",slug:"/cep/reference/extensions/io/gcp-pubsub",permalink:"/docs/cep/reference/extensions/io/gcp-pubsub",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/master/docs/cep/reference/extensions/io/gcp-pubsub.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Sentiment",permalink:"/docs/cep/reference/extensions/execution/sentiment"},next:{title:"HTTP & HTTPS",permalink:"/docs/cep/reference/extensions/io/http"}},s={},c=[{value:"Features",id:"features",level:2},{value:"Google Pubsub Sink",id:"google-pubsub-sink",level:2},{value:"Google Pubsub Source",id:"google-pubsub-source",level:2}],m={toc:c};function d(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"google-pub-sub"},"Google Pub-Sub"),(0,l.kt)("p",null,"This an extension that receives and publishes events from/to Google Pub/Sub."),(0,l.kt)("h2",{id:"features"},"Features"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#google-pubsub-sink"},"Google pubsub (Sink)"))),(0,l.kt)("p",{parentName:"li"},"  This sends messages to a topic in google pubsub server.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#google-pubsub-source"},"Google pubsub (Source)"))),(0,l.kt)("p",{parentName:"li"}," This receives messages from a topic in google pubsub server."))),(0,l.kt)("h2",{id:"google-pubsub-sink"},"Google Pubsub Sink"),(0,l.kt)("p",null,"The Google PubSub sink publishes messages to a topic in the Google PubSub server. If the required topic does not exist, Google PubSub Sink creates the topic and publishes messages to it."),(0,l.kt)("p",null,"Syntax:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'CREATE SINK <name> WITH (type="googlepubsub", project.id="<STRING>", topic.id="<STRING>", credential.id="<STRING>", map.type=<"STRING>")\n')),(0,l.kt)("p",null,"QUERY PARAMETERS:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Default Value"),(0,l.kt)("th",{parentName:"tr",align:null},"Possible Data Types"),(0,l.kt)("th",{parentName:"tr",align:null},"Optional"),(0,l.kt)("th",{parentName:"tr",align:null},"Dynamic"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"project.id"),(0,l.kt)("td",{parentName:"tr",align:null},"The unique ID of the GCP console project within which the topic is created."),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"STRING"),(0,l.kt)("td",{parentName:"tr",align:null},"No"),(0,l.kt)("td",{parentName:"tr",align:null},"No")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"topic.id"),(0,l.kt)("td",{parentName:"tr",align:null},"The ID of the topic to which the messages that are processed by Macrometa are published."),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"STRING"),(0,l.kt)("td",{parentName:"tr",align:null},"No"),(0,l.kt)("td",{parentName:"tr",align:null},"No")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"credential.id"),(0,l.kt)("td",{parentName:"tr",align:null},"The unique ID of the service account credentials."),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"STRING"),(0,l.kt)("td",{parentName:"tr",align:null},"No"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("p",null,"EXAMPLE 1:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"CREATE SINK InputStream WITH (type = 'googlepubsub', @map(type= 'text'), project.id = 'sp-path-1547649404768', credential.id = 'PUB_SUB_FAST', topic.id ='topicA') (message string);\n")),(0,l.kt)("p",null,"This query publishes messages to a topic in the Google PubSub server. Here, the messages are published to ",(0,l.kt)("inlineCode",{parentName:"p"},"topicA")," topic in the ",(0,l.kt)("inlineCode",{parentName:"p"},"sp-path-1547649404768")," project. If the ",(0,l.kt)("inlineCode",{parentName:"p"},"topicA")," topic already exists in the ",(0,l.kt)("inlineCode",{parentName:"p"},"sp-path-1547649404768")," project, messages are directly published to that topic. "),(0,l.kt)("p",null,"If it does not exist, a topic with that ID is newly created in the project and then, the messages are published to that topic."),(0,l.kt)("h2",{id:"google-pubsub-source"},"Google Pubsub Source"),(0,l.kt)("p",null,"The Google PubSub source receives events to be processed by Macrometa from a topic in a Google PubSub server. Here, a subscriber client creates a subscription to that topic and consumes messages via the subscription. The subscription applications receive only the messages that are published after the subscription is created. "),(0,l.kt)("p",null,"A subscription connects a topic to a subscriber application, enabling the application to receive and process messages from that topic. A topic can have multiple subscriptions, but a given subscription belongs only to a single topic."),(0,l.kt)("p",null,"Syntax:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'CREATE SOURCE <name> WITH (type="googlepubsub", project.id="<STRING>", topic.id="<STRING>", subscription.id="<STRING>", credential.id="<STRING>", map.type="<STRING>")\n')),(0,l.kt)("p",null,"QUERY PARAMETERS:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Default Value"),(0,l.kt)("th",{parentName:"tr",align:null},"Possible Data Types"),(0,l.kt)("th",{parentName:"tr",align:null},"Optional"),(0,l.kt)("th",{parentName:"tr",align:null},"Dynamic"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"project.id"),(0,l.kt)("td",{parentName:"tr",align:null},"The unique ID of the GCP console project within which the topic is created."),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"STRING"),(0,l.kt)("td",{parentName:"tr",align:null},"No"),(0,l.kt)("td",{parentName:"tr",align:null},"No")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"topic.id"),(0,l.kt)("td",{parentName:"tr",align:null},"The ID of the topic to which the messages that are processed by Macrometa are published."),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"STRING"),(0,l.kt)("td",{parentName:"tr",align:null},"No"),(0,l.kt)("td",{parentName:"tr",align:null},"No")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"subscription.id"),(0,l.kt)("td",{parentName:"tr",align:null},"The unique ID of the subscription from which messages must be retrieved."),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"STRING"),(0,l.kt)("td",{parentName:"tr",align:null},"No"),(0,l.kt)("td",{parentName:"tr",align:null},"No")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"credential.id"),(0,l.kt)("td",{parentName:"tr",align:null},"The unique ID of the service account credentials."),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"STRING"),(0,l.kt)("td",{parentName:"tr",align:null},"No"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("p",null,"EXAMPLE 1:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"CREATE SOURCE OutputStream WITH (type='googlepubsub', map.type='text', topic.id='topicA', project.id='sp-path-1547649404768', credential.id = 'PUB_SUB_FAST', subscription.id='subA') (message String);\n")),(0,l.kt)("p",null,"This query shows how to subscribe to a google pubsub topic. Here, a google pubsub source subscribes to the ",(0,l.kt)("inlineCode",{parentName:"p"},"topicA")," topic that resides in the ",(0,l.kt)("inlineCode",{parentName:"p"},"sp-path-1547649404768")," project within a google pubsub instance. The events are received in the text format, mapped to a event, and then sent to a stream named OutputStream."))}d.isMDXComponent=!0}}]);