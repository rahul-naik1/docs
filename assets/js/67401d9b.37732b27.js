"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2578],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return u}});var n=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var r=n.createContext({}),m=function(e){var t=n.useContext(r),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=m(e.components);return n.createElement(r.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,l=e.originalType,r=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=m(a),u=i,g=d["".concat(r,".").concat(u)]||d[u]||c[u]||l;return a?n.createElement(g,o(o({ref:t},p),{},{components:a})):n.createElement(g,o({ref:t},p))}));function u(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=a.length,o=new Array(l);o[0]=d;var s={};for(var r in t)hasOwnProperty.call(t,r)&&(s[r]=t[r]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var m=2;m<l;m++)o[m]=a[m];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},36173:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return r},default:function(){return u},frontMatter:function(){return s},metadata:function(){return m},toc:function(){return c}});var n=a(87462),i=a(63366),l=(a(67294),a(3905)),o=["components"],s={sidebar_position:1,title:"Using AWS Console CLI"},r=void 0,m={unversionedId:"collections/dynamo/using-aws-cli",id:"collections/dynamo/using-aws-cli",title:"Using AWS Console CLI",description:"Macrometa GDN can be used as the data store for apps written for AWS DynamoDB. Switch to using GDN by just changing the connection URL, accessKey and secretKey. You can continue using aws dynamodb sdk and cli you are familiar with.",source:"@site/docs/collections/dynamo/using-aws-cli.md",sourceDirName:"collections/dynamo",slug:"/collections/dynamo/using-aws-cli",permalink:"/docs/collections/dynamo/using-aws-cli",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/master/docs/collections/dynamo/using-aws-cli.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Using AWS Console CLI"},sidebar:"tutorialSidebar",previous:{title:"Tutorial",permalink:"/docs/collections/documents/geospatial/tutorial"},next:{title:"AWS Javascript SDK (browser)",permalink:"/docs/collections/dynamo/using-aws-js-browser"}},p={},c=[{value:"Prerequistes",id:"prerequistes",level:2},{value:"Create Global Table",id:"create-global-table",level:2},{value:"Create Local Table",id:"create-local-table",level:2},{value:"List Global Tables",id:"list-global-tables",level:2},{value:"List Local Tables",id:"list-local-tables",level:2},{value:"Put Items",id:"put-items",level:2},{value:"Get Item",id:"get-item",level:2},{value:"Batch Get Items",id:"batch-get-items",level:2},{value:"Batch Write Items",id:"batch-write-items",level:2},{value:"Scan Items",id:"scan-items",level:2},{value:"Query Items",id:"query-items",level:2},{value:"Count Items",id:"count-items",level:2},{value:"Update Item",id:"update-item",level:2},{value:"Delete Item",id:"delete-item",level:2},{value:"Delete Table",id:"delete-table",level:2}],d={toc:c};function u(e){var t=e.components,a=(0,i.Z)(e,o);return(0,l.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Macrometa GDN can be used as the data store for apps written for AWS DynamoDB. Switch to using GDN by just changing the ",(0,l.kt)("inlineCode",{parentName:"p"},"connection URL"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"accessKey")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"secretKey"),". You can continue using aws dynamodb sdk and cli you are familiar with."),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Macrometa GDN provides aws dynamo db ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"global tables"))," as the ",(0,l.kt)("inlineCode",{parentName:"p"},"default")," option. "))),(0,l.kt)("p",null,"This enables you to deliver low-latency data access to your users no matter where they are located. GDN performs all of the necessary tasks to create identical tables in all the regions around the globe and propagate ongoing data changes to all of them."),(0,l.kt)("p",null,"Similarly GDN provides better data consistency guarantees i.e., ",(0,l.kt)("inlineCode",{parentName:"p"},"strong consistency")," within a region and ",(0,l.kt)("inlineCode",{parentName:"p"},"strong eventual consistency")," across regions utilizing CRDTs and partially ordered logs."),(0,l.kt)("h2",{id:"prerequistes"},"Prerequistes"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Create an API Key"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Login to your tenant account on ",(0,l.kt)("a",{parentName:"li",href:"https://gdn.paas.macrometa.io"},"https://gdn.paas.macrometa.io")),(0,l.kt)("li",{parentName:"ul"},"Create an API key via GUI/REST API. Make a copy of the key.")),(0,l.kt)("div",{parentName:"li",className:"admonition admonition-tip alert alert--success"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre"},"Following api key is created under `demo@macrometa.io/_system` on https://gdn.paas.macrometa.io with `rw` permissions.\n```bash\n    demo.demok1.1a1aad0f4b000ca4d2d3bdb505298cbb9467b65526b0f79364e61e5f00000000\n```\n"))))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Download & Install AWS Console CLI"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"URL: ",(0,l.kt)("a",{parentName:"li",href:"https://aws.amazon.com/cli/"},"https://aws.amazon.com/cli/")),(0,l.kt)("li",{parentName:"ul"},"Mac OS: ",(0,l.kt)("a",{parentName:"li",href:"https://awscli.amazonaws.com/AWSCLIV2.pkg"},"https://awscli.amazonaws.com/AWSCLIV2.pkg"))),(0,l.kt)("div",{parentName:"li",className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre"},"$ aws --version\n\naws-cli/2.0.34 Python/3.7.4 Darwin/19.5.0 botocore/2.0.0dev38\n"))))),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Configure cli using ",(0,l.kt)("inlineCode",{parentName:"p"},"aws configure")," command."),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"    (base) ~/demos$ aws configure\n    AWS Access Key ID [****************0000]: apikey demo.demok1.1a1aad0f4b000ca4d2d3bdb505298cbb9467b65526b0f79364e61e5f00000000\n    AWS Secret Access Key [****************0000]: \n    Default region name [us-west-1]: \n    Default output format [None]: \n")),(0,l.kt)("div",{parentName:"li",className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre"},"1. For API Keys, put `apikey` as prefix. See above example.\n2. For JWT Tokens, put `bearer` as prefix.\n")))))),(0,l.kt)("h2",{id:"create-global-table"},"Create Global Table"),(0,l.kt)("p",null,"In this step, you create a Music ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"global table"))," in GDN. The table has the following details:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Partition key")," \u2014 Artist"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Sort key")," \u2014 SongTitle")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"    aws dynamodb create-table \\\n        --table-name Music \\\n        --attribute-definitions \\\n            AttributeName=Artist,AttributeType=S \\\n            AttributeName=SongTitle,AttributeType=S \\\n        --key-schema \\\n            AttributeName=Artist,KeyType=HASH \\\n            AttributeName=SongTitle,KeyType=RANGE \\\n        --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5 \\\n        --endpoint-url https://api-gdn.macrometa.io/_api/dynamo\n")),(0,l.kt)("h2",{id:"create-local-table"},"Create Local Table"),(0,l.kt)("p",null,"In this step, you create a Music ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("em",{parentName:"strong"},"local table"))," in GDN. The table has the following details:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Partition key")," \u2014 Artist"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Sort key")," \u2014 SongTitle")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"    aws dynamodb create-table \\\n        --table-name Music \\\n        --attribute-definitions \\\n            AttributeName=Artist,AttributeType=S \\\n            AttributeName=SongTitle,AttributeType=S \\\n        --key-schema \\\n            AttributeName=Artist,KeyType=HASH \\\n            AttributeName=SongTitle,KeyType=RANGE \\\n        --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5 \\\n        --endpoint-url https://api-gdn.macrometa.io/_api/dynamo \\\n        --tags Key=Local,Value=True\n")),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Local tables are allowed only if flag ",(0,l.kt)("inlineCode",{parentName:"p"},"dynamo_local_tables=true")," for the ",(0,l.kt)("inlineCode",{parentName:"p"},"tenant"),". "))),(0,l.kt)("h2",{id:"list-global-tables"},"List Global Tables"),(0,l.kt)("p",null,"The following AWS CLI example lists available ",(0,l.kt)("inlineCode",{parentName:"p"},"global tables")," in your GDN."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"    aws dynamodb list-global-tables --endpoint-url https://api-gdn.macrometa.io/_api/dynamo\n")),(0,l.kt)("h2",{id:"list-local-tables"},"List Local Tables"),(0,l.kt)("p",null,"The following AWS CLI example lists available ",(0,l.kt)("inlineCode",{parentName:"p"},"local tables")," in your GDN."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"    aws dynamodb list-tables --endpoint-url https://api-gdn.macrometa.io/_api/dynamo\n")),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},(0,l.kt)("inlineCode",{parentName:"p"},"list-tables")," will return local tables when ",(0,l.kt)("inlineCode",{parentName:"p"},"dynamo_local_tables")," flag is ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," for the tenant."))),(0,l.kt)("h2",{id:"put-items"},"Put Items"),(0,l.kt)("p",null,"The following AWS CLI example creates two new items in the Music global table using ",(0,l.kt)("inlineCode",{parentName:"p"},"put-item"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'    aws dynamodb put-item \\\n        --table-name Music \\\n        --item \'{"Artist": {"S": "Obscure Indie Band"}, "SongTitle": {"S": "Call Me Today"}}\' \\\n        --condition-expression "attribute_not_exists(Artist)" \\\n        --return-values ALL_NEW \\\n        --endpoint-url https://api-gdn.macrometa.io/_api/dynamo\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'    aws dynamodb put-item \\\n        --table-name Music \\\n        --item \'{"Artist": {"S": "Luke Combs"}, "SongTitle": {"S": "Tequila"}}\' \\\n        --condition-expression "attribute_not_exists(Artist)" \\\n        --return-values ALL_NEW \\\n        --endpoint-url https://api-gdn.macrometa.io/_api/dynamo\n')),(0,l.kt)("h2",{id:"get-item"},"Get Item"),(0,l.kt)("p",null,"The following AWS CLI example reads an item from the Music global table using ",(0,l.kt)("inlineCode",{parentName:"p"},"get-item"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'    aws dynamodb get-item \\\n        --table-name Music \\\n        --key \'{ "Artist": {"S": "Luke Combs"}, "SongTitle": {"S": "Tequila"}}\'\n        --endpoint-url https://api-gdn.macrometa.io/_api/dynamo\n')),(0,l.kt)("h2",{id:"batch-get-items"},"Batch Get Items"),(0,l.kt)("p",null,"The following AWS CLI example reads multiple items from the Music global table using ",(0,l.kt)("inlineCode",{parentName:"p"},"batch-get-item"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'    aws dynamodb batch-get-item \\\n        --request-items \'{"Music": {"Keys": [{"Artist": {"S": "Obscure Indie Band"},"SongTitle": {"S": "Call Me Today"}},{"Artist": {"S": "Luke Combs"},"SongTitle": {"S": "Tequila"}}],"ProjectionExpression":"Artist"}}\' \\\n        --return-consumed-capacity TOTAL \\\n        --endpoint-url https://api-gdn.macrometa.io/_api/dynamo\n')),(0,l.kt)("h2",{id:"batch-write-items"},"Batch Write Items"),(0,l.kt)("p",null,"The following AWS CLI example writes multiple items to the Music global table using ",(0,l.kt)("inlineCode",{parentName:"p"},"batch-write-item"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'   aws dynamodb batch-write-item \\\n     --request-items \'{"Music": [{"PutRequest": {"Item": {"Artist": {"S": "TestName1"},"SongTitle": {"S": "The Best1"}}}},{"PutRequest": {"Item": {"Artist": {"S": "TestName2"},"SongTitle": {"S": "The Best2"}}}}]}\' \\\n     --return-consumed-capacity INDEXES \\\n     --return-item-collection-metrics SIZE \\\n     --endpoint-url https://api-gdn.macrometa.io/_api/dynamo\n')),(0,l.kt)("h2",{id:"scan-items"},"Scan Items"),(0,l.kt)("p",null,"The following AWS CLI example scans Music global table using ",(0,l.kt)("inlineCode",{parentName:"p"},"scan"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'    aws dynamodb scan \\\n       --table-name Music \\\n       --filter-expression "Artist = :a" \\\n       --projection-expression "#ST, #AT" \\\n       --expression-attribute-names \'{"#ST": "SongTitle","#AT":"Artist"}\' \\\n       --expression-attribute-values \'{":a": {"S": "TestName1"}}\' \\\n       --endpoint-url https://api-gdn.macrometa.io/_api/dynamo\n')),(0,l.kt)("h2",{id:"query-items"},"Query Items"),(0,l.kt)("p",null,"The following AWS CLI example queries an item in the Music global table using ",(0,l.kt)("inlineCode",{parentName:"p"},"query"),"."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Query All Items:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"    aws dynamodb query \\\n        --table-name Music \\\n        --endpoint-url https://api-gdn.macrometa.io/_api/dynamo\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Query By Artist Name:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'    aws dynamodb query \\\n        --table-name Music \\\n        --key-condition-expression "Artist == :name" \\\n        --expression-attribute-values  \'{":name":{"S":"Luke Combs"}}\' \\\n        --endpoint-url https://api-gdn.macrometa.io/_api/dynamo\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Query By complex conditions:")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'    aws dynamodb query \\\n        --table-name Music \\\n        --key-condition-expression "Artist == :n1 OR begins_with(Artist, :n2)" \\\n        --expression-attribute-values  \'{":n1":{"S":"Luke Combs"}, ":n2":{"S":"Obscure"}}\' \\\n        --endpoint-url https://api-gdn.macrometa.io/_api/dynamo  \n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'    aws dynamodb query \\\n        --table-name Music \\\n        --key-condition-expression "Artist == :n1 OR begins_with(Artist, :n2)" \\\n        --filter-expression "#a <> :n1" \\\n        --expression-attribute-names \'{"#a": "Artist"}\' \\\n        --expression-attribute-values  \'{":n1":{"S":"Luke Combs"}, ":n2":{"S":"Obscure"}}\' \\\n        --endpoint-url https://api-gdn.macrometa.io/_api/dynamo\n')),(0,l.kt)("h2",{id:"count-items"},"Count Items"),(0,l.kt)("p",null,"The following AWS CLI example counts items in the Music global table using ",(0,l.kt)("inlineCode",{parentName:"p"},"query"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"    aws dynamodb query \\\n        --table-name Music \\\n        --select COUNT \\\n        --endpoint-url https://api-gdn.macrometa.io/_api/dynamo\n")),(0,l.kt)("h2",{id:"update-item"},"Update Item"),(0,l.kt)("p",null,"The following AWS CLI example updates an item in the Music global table using ",(0,l.kt)("inlineCode",{parentName:"p"},"update-item"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'    aws dynamodb update-item \\\n        --table-name Music \\\n        --key \'{"Artist": {"S": "Luke Combs"}, "SongTitle": {"S": "Tequila"}}\' \\\n        --update-expression "SET Year = :y, SongTitle = :t" \\\n        --expression-attribute-values  \'{":y":{"N":"2020"}, ":t":{"S":"Happy Day"}}\' \\\n        --return-values ALL_NEW \\\n        --endpoint-url https://api-gdn.macrometa.io/_api/dynamo\n')),(0,l.kt)("h2",{id:"delete-item"},"Delete Item"),(0,l.kt)("p",null,"The following AWS CLI example deletes item in the Music global table using ",(0,l.kt)("inlineCode",{parentName:"p"},"delete-item"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'    aws dynamodb delete-item \\\n        --table-name Music \\\n        --key \'{"Artist": {"S": "Luke Combs"}, "SongTitle": {"S": "Happy Day"}}\' \\\n        --return-values ALL_OLD \\\n        --endpoint-url https://api-gdn.macrometa.io/_api/dynamo\n')),(0,l.kt)("h2",{id:"delete-table"},"Delete Table"),(0,l.kt)("p",null,"The following AWS CLI example deletes the Music global table using ",(0,l.kt)("inlineCode",{parentName:"p"},"delete-table"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"    aws dynamodb delete-table \\\n        --table-name Music \\\n        --endpoint-url https://api-gdn.macrometa.io/_api/dynamo\n")))}u.isMDXComponent=!0}}]);