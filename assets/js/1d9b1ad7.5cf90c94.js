"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2299],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return N}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var m=a.createContext({}),o=function(e){var t=a.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=o(e.components);return a.createElement(m.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,m=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),k=o(n),N=r,s=k["".concat(m,".").concat(N)]||k[N]||u[N]||i;return n?a.createElement(s,l(l({ref:t},p),{},{components:n})):a.createElement(s,l({ref:t},p))}));function N(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=k;var d={};for(var m in t)hasOwnProperty.call(t,m)&&(d[m]=t[m]);d.originalType=e,d.mdxType="string"==typeof e?e:r,l[1]=d;for(var o=2;o<i;o++)l[o]=n[o];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},41309:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return m},default:function(){return N},frontMatter:function(){return d},metadata:function(){return o},toc:function(){return u}});var a=n(87462),r=n(63366),i=(n(67294),n(3905)),l=["components"],d={sidebar_position:6,title:"Data Summarizations (Aggregations)"},m=void 0,o={unversionedId:"cep/reference/data-summarization",id:"cep/reference/data-summarization",title:"Data Summarizations (Aggregations)",description:"Sliding Time",source:"@site/docs/cep/reference/data-summarization.md",sourceDirName:"cep/reference",slug:"/cep/reference/data-summarization",permalink:"/docs/cep/reference/data-summarization",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/master/docs/cep/reference/data-summarization.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,title:"Data Summarizations (Aggregations)"},sidebar:"tutorialSidebar",previous:{title:"Data Transformation",permalink:"/docs/cep/reference/data-transformation"},next:{title:"Patterns & Trends",permalink:"/docs/cep/reference/patterns-n-trends"}},p={},u=[{value:"Sliding Time",id:"sliding-time",level:2},{value:"Aggregation Behavior",id:"aggregation-behavior",level:3},{value:"Batch (Tumbling) Time",id:"batch-tumbling-time",level:2},{value:"Aggregation Behavior",id:"aggregation-behavior-1",level:3},{value:"Sliding Event Count",id:"sliding-event-count",level:2},{value:"Aggregation Behavior",id:"aggregation-behavior-2",level:3},{value:"Batch (Tumbling) Event Count",id:"batch-tumbling-event-count",level:2},{value:"Example",id:"example",level:3},{value:"Aggregation Behavior",id:"aggregation-behavior-3",level:3},{value:"Session",id:"session",level:2},{value:"Aggregation Behavior",id:"aggregation-behavior-4",level:3},{value:"Named Window",id:"named-window",level:2},{value:"Aggregation Behavior",id:"aggregation-behavior-5",level:3}],k={toc:u};function N(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"sliding-time"},"Sliding Time"),(0,i.kt)("p",null,"This example shows aggregating events over time in a sliding manner."),(0,i.kt)("p",null,"To aggregate events in batches, based on events, or by session, refer other the examples in Data Summarization section. For more information on ",(0,i.kt)("a",{parentName:"p",href:"query-guide#window"},"windows")," refer to ",(0,i.kt)("a",{parentName:"p",href:"/docs/cep/reference/query-guide"},"stream query guide"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE STREAM TemperatureStream(sensorId string, temperature double);\n\n@info(name = 'Overall-analysis')\ninsert all events into OverallTemperatureStream\n-- Calculate average, maximum, and count for `temperature` attribute.\nselect avg(temperature) as avgTemperature,\n       max(temperature) as maxTemperature,\n       count() as numberOfEvents\n-- Aggregate events over `1 minute` sliding window\nfrom TemperatureStream#window.time(1 min);\n-- Output when events are added, and removed (expired) from `window.time()`.\n\n\n@info(name = 'SensorId-analysis')\ninsert into SensorIdTemperatureStream\nselect sensorId,\n-- Calculate average, and minimum for `temperature`, by grouping events by `sensorId`.\n       avg(temperature) as avgTemperature,\n       min(temperature) as maxTemperature\n-- Aggregate events over `30 seconds` sliding window\nfrom TemperatureStream#window.time(30 sec)       \ngroup by sensorId\n-- Output events only when `avgTemperature` is greater than `20.0`.\nhaving avgTemperature > 20.0;\n-- Output only when events are added to `window.time()`.\n")),(0,i.kt)("h3",{id:"aggregation-behavior"},"Aggregation Behavior"),(0,i.kt)("p",null,"When events are sent to ",(0,i.kt)("inlineCode",{parentName:"p"},"TemperatureStream")," stream, following events will get emitted at ",(0,i.kt)("inlineCode",{parentName:"p"},"OverallTemperatureStream")," stream via ",(0,i.kt)("inlineCode",{parentName:"p"},"Overall-analysis")," query, and ",(0,i.kt)("inlineCode",{parentName:"p"},"SensorIdTemperatureStream")," stream via ",(0,i.kt)("inlineCode",{parentName:"p"},"SensorId-analysis")," query."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Time"),(0,i.kt)("th",{parentName:"tr",align:null},"Input to ",(0,i.kt)("inlineCode",{parentName:"th"},"TemperatureStream")),(0,i.kt)("th",{parentName:"tr",align:null},"Output at ",(0,i.kt)("inlineCode",{parentName:"th"},"OverallTemperatureStream")),(0,i.kt)("th",{parentName:"tr",align:null},"Output at ",(0,i.kt)("inlineCode",{parentName:"th"},"SensorIdTemperatureStream")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:00:00"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"18.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"18.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"18.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"1"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"No events, as having ",(0,i.kt)("br",null),"condition not satisfied.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:00:10"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"23.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"20.5"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"23.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"2"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"23.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"23.0"),"]")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:00:20"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"22.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"21.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"23.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"3"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"22.5"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"22.0"),"]")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:00:40"),(0,i.kt)("td",{parentName:"tr",align:null},"-"),(0,i.kt)("td",{parentName:"tr",align:null},"-"),(0,i.kt)("td",{parentName:"tr",align:null},"No events, as expired ",(0,i.kt)("br",null),"events are not emitted.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:00:50"),(0,i.kt)("td",{parentName:"tr",align:null},"-"),(0,i.kt)("td",{parentName:"tr",align:null},"-"),(0,i.kt)("td",{parentName:"tr",align:null},"No events, as expired ",(0,i.kt)("br",null),"events are not emitted.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:00:00"),(0,i.kt)("td",{parentName:"tr",align:null},"-"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"22.5"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"23.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"2"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"-")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:01:10"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"17.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"19.5"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"22.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"2"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"-")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:01:20"),(0,i.kt)("td",{parentName:"tr",align:null},"-"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"17.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"17.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"1"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"-")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:02:10"),(0,i.kt)("td",{parentName:"tr",align:null},"-"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"null"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"null"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"-")))),(0,i.kt)("h2",{id:"batch-tumbling-time"},"Batch (Tumbling) Time"),(0,i.kt)("p",null,"This example shows aggregating events over time in a batch (tumbling) manner."),(0,i.kt)("p",null,"To aggregate events in a sliding manner, based on events, or by session, refer other the examples in Data Summarization section. For more information information on ",(0,i.kt)("a",{parentName:"p",href:"query-guide#window"},"windows")," refer to ",(0,i.kt)("a",{parentName:"p",href:"/docs/cep/reference/query-guide"},"stream query guide"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE STREAM TemperatureStream(sensorId string, temperature double);\n\n@info(name = 'Overall-analysis')\n-- Calculate average, maximum, and count for `temperature` attribute.\ninsert into OverallTemperatureStream\nselect avg(temperature) as avgTemperature,\n       max(temperature) as maxTemperature,\n       count() as numberOfEvents\n-- Aggregate events every `1 minute`, from the arrival of the first event.\nfrom TemperatureStream#window.timeBatch(1 min);\n\n\n@info(name = 'SensorId-analysis')\ninsert into SensorIdTemperatureStream\nselect sensorId,\n-- Calculate average, and minimum for `temperature`, by grouping events by `sensorId`.\n       avg(temperature) as avgTemperature,\n       min(temperature) as maxTemperature\n\n-- Aggregate events every `30 seconds` from epoch timestamp `0`.\nfrom TemperatureStream#window.timeBatch(30 sec, 0)\n\ngroup by sensorId\n\n-- Output events only when `avgTemperature` is greater than `20.0`.\nhaving avgTemperature > 20.0;\n")),(0,i.kt)("h3",{id:"aggregation-behavior-1"},"Aggregation Behavior"),(0,i.kt)("p",null,"When events are sent to ",(0,i.kt)("inlineCode",{parentName:"p"},"TemperatureStream")," stream, following events will get emitted at ",(0,i.kt)("inlineCode",{parentName:"p"},"OverallTemperatureStream")," stream via ",(0,i.kt)("inlineCode",{parentName:"p"},"Overall-analysis")," query, and ",(0,i.kt)("inlineCode",{parentName:"p"},"SensorIdTemperatureStream")," stream via ",(0,i.kt)("inlineCode",{parentName:"p"},"SensorId-analysis")," query."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Time"),(0,i.kt)("th",{parentName:"tr",align:null},"Input to ",(0,i.kt)("inlineCode",{parentName:"th"},"TemperatureStream")),(0,i.kt)("th",{parentName:"tr",align:null},"Output at ",(0,i.kt)("inlineCode",{parentName:"th"},"OverallTemperatureStream")),(0,i.kt)("th",{parentName:"tr",align:null},"Output at ",(0,i.kt)("inlineCode",{parentName:"th"},"SensorIdTemperatureStream")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:00:10"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"21.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"-"),(0,i.kt)("td",{parentName:"tr",align:null},"-")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:00:20"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"25.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"-"),(0,i.kt)("td",{parentName:"tr",align:null},"-")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:00:30"),(0,i.kt)("td",{parentName:"tr",align:null},"-"),(0,i.kt)("td",{parentName:"tr",align:null},"-"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"21.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"21.0"),"]",",","[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"25.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"25.0"),"]")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:00:35"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"26.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"-"),(0,i.kt)("td",{parentName:"tr",align:null},"-")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:00:40"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"27.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"-"),(0,i.kt)("td",{parentName:"tr",align:null},"-")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:00:55"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"19.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"-"),(0,i.kt)("td",{parentName:"tr",align:null},"-")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:00:00"),(0,i.kt)("td",{parentName:"tr",align:null},"-"),(0,i.kt)("td",{parentName:"tr",align:null},"-"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"26.5"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"26.0"),"]")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:01:10"),(0,i.kt)("td",{parentName:"tr",align:null},"-"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"23.6"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"27.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"5"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"-")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:01:20"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"21.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"-"),(0,i.kt)("td",{parentName:"tr",align:null},"-")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:01:30"),(0,i.kt)("td",{parentName:"tr",align:null},"-"),(0,i.kt)("td",{parentName:"tr",align:null},"-"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"21.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"21.0"),"]")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:02:10"),(0,i.kt)("td",{parentName:"tr",align:null},"-"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"21.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"21.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"1"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"-")))),(0,i.kt)("h2",{id:"sliding-event-count"},"Sliding Event Count"),(0,i.kt)("p",null,"This example shows aggregating events based on event count in a sliding manner."),(0,i.kt)("p",null,"To aggregate events in batches, based on time, or by session, refer other the examples in Data Summarization section. For more information information on ",(0,i.kt)("a",{parentName:"p",href:"query-guide#window"},"windows")," refer to ",(0,i.kt)("a",{parentName:"p",href:"/docs/cep/reference/query-guide"},"stream query guide"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE STREAM TemperatureStream(sensorId string, temperature double);\n\n@info(name = 'Overall-analysis')\ninsert into OverallTemperatureStream\n-- Calculate average, maximum, and count for `temperature` attribute.\nselect avg(temperature) as avgTemperature,\n       max(temperature) as maxTemperature,\n       count() as numberOfEvents\n-- Aggregate last `4` events in a sliding manner.\nfrom TemperatureStream#window.length(4);\n\n\n@info(name = 'SensorId-analysis')\ninsert into SensorIdTemperatureStream\nselect sensorId,\n-- Calculate average, and minimum for `temperature`, by grouping events by `sensorId`.\n       avg(temperature) as avgTemperature,\n       min(temperature) as maxTemperature\n\n-- Aggregate last `5` events in a sliding manner.\nfrom TemperatureStream#window.length(5)\ngroup by sensorId\n-- Output events only when `avgTemperature` is greater than or equal to `20.0`.\nhaving avgTemperature >= 20.0;\n")),(0,i.kt)("h3",{id:"aggregation-behavior-2"},"Aggregation Behavior"),(0,i.kt)("p",null,"When events are sent to ",(0,i.kt)("inlineCode",{parentName:"p"},"TemperatureStream")," stream, following events will get emitted at ",(0,i.kt)("inlineCode",{parentName:"p"},"OverallTemperatureStream")," stream via ",(0,i.kt)("inlineCode",{parentName:"p"},"Overall-analysis")," query, and ",(0,i.kt)("inlineCode",{parentName:"p"},"SensorIdTemperatureStream")," stream via ",(0,i.kt)("inlineCode",{parentName:"p"},"SensorId-analysis")," query."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Input to ",(0,i.kt)("inlineCode",{parentName:"th"},"TemperatureStream")),(0,i.kt)("th",{parentName:"tr",align:null},"Output at ",(0,i.kt)("inlineCode",{parentName:"th"},"OverallTemperatureStream")),(0,i.kt)("th",{parentName:"tr",align:null},"Output at ",(0,i.kt)("inlineCode",{parentName:"th"},"SensorIdTemperatureStream")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"19.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"19.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"19.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"1"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"No events, as having ",(0,i.kt)("br",null),"condition not satisfied ",(0,i.kt)("br",null),"for ",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"26.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"22.5"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"26.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"2"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"26.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"26.0"),"]")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"24.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"23.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"26.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"3"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"25.5"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"24.0"),"]")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"20.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"22.5"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"26.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"4"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"No events, as having ",(0,i.kt)("br",null),"condition not satisfied ",(0,i.kt)("br",null),"for ",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"21.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"22.75"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"26.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"4"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"20.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"19.0"),"]")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"22.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"21.75"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"24.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"4"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"21.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"20.0"),"]")))),(0,i.kt)("h2",{id:"batch-tumbling-event-count"},"Batch (Tumbling) Event Count"),(0,i.kt)("p",null,"This example shows aggregating events based on event count in a batch (tumbling) manner."),(0,i.kt)("p",null,"To aggregate events in a sliding manner, based on time, or by session, refer other the examples in Data Summarization section. For more information information on ",(0,i.kt)("a",{parentName:"p",href:"query-guide#window"},"windows")," refer to ",(0,i.kt)("a",{parentName:"p",href:"/docs/cep/reference/query-guide"},"stream query guide"),"."),(0,i.kt)("h3",{id:"example"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE STREAM TemperatureStream(sensorId string, temperature double);\n\n@info(name = 'Overall-analysis')\ninsert into OverallTemperatureStream\n-- Calculate average, maximum, and count for `temperature` attribute.\nselect avg(temperature) as avgTemperature,\n       max(temperature) as maxTemperature,\n       count() as numberOfEvents\n-- Aggregate every `4` events in a batch (tumbling) manner.\nfrom TemperatureStream#window.lengthBatch(4);\n\n@info(name = 'SensorId-analysis')\ninsert into SensorIdTemperatureStream\nselect sensorId,\n-- Calculate average, and minimum for `temperature`, by grouping events by `sensorId`.\n       avg(temperature) as avgTemperature,\n       min(temperature) as maxTemperature\n-- Aggregate every `5` events in a batch (tumbling) manner.\nfrom TemperatureStream#window.lengthBatch(5)\ngroup by sensorId\n-- Output events only when `avgTemperature` is greater than or equal to `20.0`.\nhaving avgTemperature >= 20.0;\n")),(0,i.kt)("h3",{id:"aggregation-behavior-3"},"Aggregation Behavior"),(0,i.kt)("p",null,"When events are sent to ",(0,i.kt)("inlineCode",{parentName:"p"},"TemperatureStream")," stream, following events will get emitted at ",(0,i.kt)("inlineCode",{parentName:"p"},"OverallTemperatureStream")," stream via ",(0,i.kt)("inlineCode",{parentName:"p"},"Overall-analysis")," query, and ",(0,i.kt)("inlineCode",{parentName:"p"},"SensorIdTemperatureStream")," stream via ",(0,i.kt)("inlineCode",{parentName:"p"},"SensorId-analysis")," query."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Input to ",(0,i.kt)("inlineCode",{parentName:"th"},"TemperatureStream")),(0,i.kt)("th",{parentName:"tr",align:null},"Output at ",(0,i.kt)("inlineCode",{parentName:"th"},"OverallTemperatureStream")),(0,i.kt)("th",{parentName:"tr",align:null},"Output at ",(0,i.kt)("inlineCode",{parentName:"th"},"SensorIdTemperatureStream")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"19.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"-"),(0,i.kt)("td",{parentName:"tr",align:null},"-")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"26.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"-"),(0,i.kt)("td",{parentName:"tr",align:null},"-")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"24.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"-"),(0,i.kt)("td",{parentName:"tr",align:null},"-")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"20.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"22.5"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"26.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"4"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"-")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"21.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"-"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"25.5"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"24.0"),"]",", ",(0,i.kt)("br",null),"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"20.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"19.0"),"]")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"22.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"-"),(0,i.kt)("td",{parentName:"tr",align:null},"-")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"21.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"-"),(0,i.kt)("td",{parentName:"tr",align:null},"-")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"22.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"21.5"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"22.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"4"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"-")))),(0,i.kt)("h2",{id:"session"},"Session"),(0,i.kt)("p",null,"This example shows aggregating events over continuous activity sessions in a sliding manner."),(0,i.kt)("p",null,"To aggregate events in batches, or based on events, refer other the examples in Data Summarization section. For more information information on ",(0,i.kt)("a",{parentName:"p",href:"query-guide#window"},"windows")," refer to ",(0,i.kt)("a",{parentName:"p",href:"/docs/cep/reference/query-guide"},"stream query guide"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE STREAM PurchaseStream(userId string, item string, price double);\n\n@info(name = 'Session-analysis')\n-- Calculate count and sum of `price` per `userId` during the session.\ninsert into OutOfOrderUserIdPurchaseStream\nselect userId,\n       count() as totalItems,\n       sum(price) as totalPrice\n-- Aggregate events over a `userId` based session window with `1 minute` session gap.\nfrom PurchaseStream#window.session(1 min, userId)\ngroup by userId\n-- Output when events are added to the session.\ninsert into UserIdPurchaseStream;\n\n@info(name = 'Session-analysis-with-late-event-arrivals')\n-- Calculate count and sum of `price` per `userId` during the session.\nselect userId,\n       count() as totalItems,\n       sum(price) as totalPrice\n-- Aggregate events over a `userId` based session window with `1 minute` session gap,\n-- and `20 seconds` of allowed latency to capture late event arrivals.\nfrom PurchaseStream#window.session(1 min, userId, 20 sec)\ngroup by userId;\n-- Output when events are added to the session.\n")),(0,i.kt)("h3",{id:"aggregation-behavior-4"},"Aggregation Behavior"),(0,i.kt)("p",null,"When events are sent to ",(0,i.kt)("inlineCode",{parentName:"p"},"PurchaseStream")," stream, following events will get emitted at ",(0,i.kt)("inlineCode",{parentName:"p"},"UserIdPurchaseStream")," stream via ",(0,i.kt)("inlineCode",{parentName:"p"},"Session-analysis")," query, and ",(0,i.kt)("inlineCode",{parentName:"p"},"OutOfOrderUserIdPurchaseStream")," stream via ",(0,i.kt)("inlineCode",{parentName:"p"},"Session-analysis-with-late-event-arrivals")," query."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Time"),(0,i.kt)("th",{parentName:"tr",align:null},"Event Timestamp"),(0,i.kt)("th",{parentName:"tr",align:null},"Input to ",(0,i.kt)("inlineCode",{parentName:"th"},"PurchaseStream")),(0,i.kt)("th",{parentName:"tr",align:null},"Output at ",(0,i.kt)("inlineCode",{parentName:"th"},"UserIdPurchaseStream")),(0,i.kt)("th",{parentName:"tr",align:null},"Output at ",(0,i.kt)("inlineCode",{parentName:"th"},"OutOfOrderUserIdPurchaseStream")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:00:00"),(0,i.kt)("td",{parentName:"tr",align:null},"9:00:00"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"'cake'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"18.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"1"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"18.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"1"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"18.0"),"]")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:00:20"),(0,i.kt)("td",{parentName:"tr",align:null},"9:00:20"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"'croissant'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"23.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"1"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"23.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"1"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"23.0"),"]")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:00:40"),(0,i.kt)("td",{parentName:"tr",align:null},"9:00:40"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"'cake'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"22.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"2"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"45.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"2"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"45.0"),"]")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:01:05"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"9:00:50")),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"'pie'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"22.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"No events, as event arrived late, and did not fall into a session."),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"2"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"40.0"),"]")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:01:10"),(0,i.kt)("td",{parentName:"tr",align:null},"9:01:10"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"'cake'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"10.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"1"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"10.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"3"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"50.0"),"]")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:01:50"),(0,i.kt)("td",{parentName:"tr",align:null},"9:01:50"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"'cake'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"20.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"1"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"20.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"1"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"23.0"),"]")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:02:40"),(0,i.kt)("td",{parentName:"tr",align:null},"9:02:40"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"'croissant'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"23.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"1"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"23.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"1"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"23.0"),"]")))),(0,i.kt)("h2",{id:"named-window"},"Named Window"),(0,i.kt)("p",null,"This example shows defining a named window and summarizing data based on the window. This example uses ",(0,i.kt)("inlineCode",{parentName:"p"},"time")," window as the named window, but any window can be defined and used as a name window. For more information information on ",(0,i.kt)("a",{parentName:"p",href:"query-guide#named-window"},"named windows")," refer to ",(0,i.kt)("a",{parentName:"p",href:"/docs/cep/reference/query-guide"},"stream query guide"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE STREAM TemperatureStream (sensorId string, temperature double);\n\n-- Define a named window with name `OneMinTimeWindow` to retain events over `1 minute` in a sliding manner.\ndefine window OneMinTimeWindow (sensorId string, temperature double) time(1 min) ;\n\n@info(name = 'Insert-to-window')\n-- Insert events in to the named time window.\ninsert into OneMinTimeWindow\nfrom TemperatureStream;\n\n@info(name = 'Min-max-analysis')\n-- Calculate minimum and maximum of `temperature` on events in `OneMinTimeWindow` window.\ninsert into MinMaxTemperatureOver1MinStream\nselect min(temperature) as minTemperature,\n       max(temperature) as maxTemperature\nfrom OneMinTimeWindow;\n\n@info(name = 'Per-sensor-analysis')\n-- Calculate average of `temperature`, by grouping events by `sensorId`, on the `OneMinTimeWindow` window.\ninsert into AvgTemperaturePerSensorStream\nselect sensorId,\n       avg(temperature) as avgTemperature\nfrom OneMinTimeWindow\ngroup by sensorId;\n")),(0,i.kt)("h3",{id:"aggregation-behavior-5"},"Aggregation Behavior"),(0,i.kt)("p",null,"When events are sent to ",(0,i.kt)("inlineCode",{parentName:"p"},"TemperatureStream")," stream, following events will get emitted at ",(0,i.kt)("inlineCode",{parentName:"p"},"MinMaxTemperatureOver1MinStream")," stream via ",(0,i.kt)("inlineCode",{parentName:"p"},"Min-max-analysis")," query, and ",(0,i.kt)("inlineCode",{parentName:"p"},"AvgTemperaturePerSensorStream")," stream via ",(0,i.kt)("inlineCode",{parentName:"p"},"Per-sensor-analysis")," query."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Time"),(0,i.kt)("th",{parentName:"tr",align:null},"Input to ",(0,i.kt)("inlineCode",{parentName:"th"},"TemperatureStream")),(0,i.kt)("th",{parentName:"tr",align:null},"Output at ",(0,i.kt)("inlineCode",{parentName:"th"},"MinMaxTemperatureOver1MinStream")),(0,i.kt)("th",{parentName:"tr",align:null},"Output at ",(0,i.kt)("inlineCode",{parentName:"th"},"AvgTemperaturePerSensorStream")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:00:10"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"21.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"21.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"21.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"21.0"),"]")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:00:20"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"25.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"21.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"25.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"25.0"),"]")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:00:35"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"26.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"21.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"26.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"25.5"),"]")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:00:40"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"27.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"21.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"27.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"26.0"),"]")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:00:55"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"19.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"19.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"27.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"20.0"),"]")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:01:30"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"22.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"19.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"27.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"25.0"),"]")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:02:10"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"18.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"18.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"22.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"18.0"),"]")))))}N.isMDXComponent=!0}}]);