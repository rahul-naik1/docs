"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6714],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return k}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),m=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=m(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),s=m(n),k=r,N=s["".concat(p,".").concat(k)]||s[k]||u[k]||i;return n?a.createElement(N,l(l({ref:t},d),{},{components:n})):a.createElement(N,l({ref:t},d))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=s;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var m=2;m<i;m++)l[m]=n[m];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},64419:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return p},default:function(){return k},frontMatter:function(){return o},metadata:function(){return m},toc:function(){return u}});var a=n(87462),r=n(63366),i=(n(67294),n(3905)),l=["components"],o={sidebar_position:8,title:"Data Pipelines"},p=void 0,m={unversionedId:"cep/reference/data-pipelining",id:"cep/reference/data-pipelining",title:"Data Pipelines",description:"Stream Joins",source:"@site/docs/cep/reference/data-pipelining.md",sourceDirName:"cep/reference",slug:"/cep/reference/data-pipelining",permalink:"/docs/cep/reference/data-pipelining",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/master/docs/cep/reference/data-pipelining.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8,title:"Data Pipelines"},sidebar:"tutorialSidebar",previous:{title:"Patterns & Trends",permalink:"/docs/cep/reference/patterns-n-trends"},next:{title:"Error Handling",permalink:"/docs/cep/reference/error-handling"}},d={},u=[{value:"Stream Joins",id:"stream-joins",level:2},{value:"Join Behavior",id:"join-behavior",level:3},{value:"Partition Events by Value",id:"partition-events-by-value",level:2},{value:"Partition Behavior",id:"partition-behavior",level:3},{value:"Scatter and Gather (String)",id:"scatter-and-gather-string",level:2},{value:"Input",id:"input",level:3},{value:"Output",id:"output",level:3},{value:"Scatter and Gather (JSON)",id:"scatter-and-gather-json",level:2},{value:"Input",id:"input-1",level:3},{value:"Output",id:"output-1",level:3}],s={toc:u};function k(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"stream-joins"},"Stream Joins"),(0,i.kt)("p",null,"This example shows joining two stream based on a condition."),(0,i.kt)("p",null,"For more information on other ",(0,i.kt)("a",{parentName:"p",href:"query-guide#join-stream"},"join operations")," refer the ",(0,i.kt)("a",{parentName:"p",href:"/docs/cep/reference/query-guide"},"stream query guide"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE STREAM TemperatureStream (roomNo string, temperature double);\n\nCREATE STREAM HumidityStream (roomNo string, humidity double);\n\n@info(name = 'Equi-join')\n-- Join latest `temperature` and `humidity` events arriving within 1 minute for each `roomNo`.\ninsert into TemperatureHumidityStream\nselect t.roomNo, t.temperature, h.humidity\nfrom TemperatureStream#window.unique:time(roomNo, 1 min) as t\n    join HumidityStream#window.unique:time(roomNo, 1 min) as h\n    on t.roomNo == h.roomNo;\n\n\n@info(name = 'Join-on-temperature')\ninsert into EnrichedTemperatureStream\nselect t.roomNo, t.temperature, h.humidity\n-- Join when events arrive in `TemperatureStream`.\nfrom TemperatureStream as t\n-- When events get matched in `time()` window, all matched events are emitted, else `null` is emitted.\n    left outer join HumidityStream#window.time(1 min) as h\n    on t.roomNo == h.roomNo;\n")),(0,i.kt)("h3",{id:"join-behavior"},"Join Behavior"),(0,i.kt)("p",null,"When events are sent to ",(0,i.kt)("inlineCode",{parentName:"p"},"TemperatureStream")," stream and ",(0,i.kt)("inlineCode",{parentName:"p"},"HumidityStream")," stream, following events will get emitted at ",(0,i.kt)("inlineCode",{parentName:"p"},"TemperatureHumidityStream")," stream via ",(0,i.kt)("inlineCode",{parentName:"p"},"Equi-join")," query, and ",(0,i.kt)("inlineCode",{parentName:"p"},"EnrichedTemperatureStream")," stream via ",(0,i.kt)("inlineCode",{parentName:"p"},"Join-on-temperature")," query."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Time"),(0,i.kt)("th",{parentName:"tr",align:null},"Input to ",(0,i.kt)("inlineCode",{parentName:"th"},"TemperatureStream")),(0,i.kt)("th",{parentName:"tr",align:null},"Input to ",(0,i.kt)("inlineCode",{parentName:"th"},"HumidityStream")),(0,i.kt)("th",{parentName:"tr",align:null},"Output at ",(0,i.kt)("inlineCode",{parentName:"th"},"TemperatureHumidityStream")),(0,i.kt)("th",{parentName:"tr",align:null},"Output at ",(0,i.kt)("inlineCode",{parentName:"th"},"EnrichedTemperatureStream")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:00:00"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"18.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"-"),(0,i.kt)("td",{parentName:"tr",align:null},"-"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"18.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"null"),"]")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:00:10"),(0,i.kt)("td",{parentName:"tr",align:null},"-"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"72.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"-"),(0,i.kt)("td",{parentName:"tr",align:null},"-")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:00:15"),(0,i.kt)("td",{parentName:"tr",align:null},"-"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"73.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"-"),(0,i.kt)("td",{parentName:"tr",align:null},"-")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:00:30"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"22.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"-"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"22.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"73.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"22.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"72.0"),"]",", ",(0,i.kt)("br",null),"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"22.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"73.0"),"]")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:00:50"),(0,i.kt)("td",{parentName:"tr",align:null},"-"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"60.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"18.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"60.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"-")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:01:10"),(0,i.kt)("td",{parentName:"tr",align:null},"-"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"62.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"-"),(0,i.kt)("td",{parentName:"tr",align:null},"-")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:01:20"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"17.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"-"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"17.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"62.0"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"17.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"60.0"),"]",", ",(0,i.kt)("br",null),"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"17.0"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"62.0"),"]")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"9:02:10"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"23.5"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"-"),(0,i.kt)("td",{parentName:"tr",align:null},"-"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"23.5"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"null"),"]")))),(0,i.kt)("h2",{id:"partition-events-by-value"},"Partition Events by Value"),(0,i.kt)("p",null,"This example shows partitioning events by attribute values."),(0,i.kt)("p",null,"For more information on partitioning events based on value ranges, refer other examples under data pipelining section.\nFor more information on ",(0,i.kt)("a",{parentName:"p",href:"query-guide#partition"},"partition")," refer the ",(0,i.kt)("a",{parentName:"p",href:"/docs/cep/reference/query-guide"},"stream query guide"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE STREAM LoginStream ( userID string, loginSuccessful bool);\n\n-- Optional purging configuration, to remove partition instances that haven't received events for `1 hour` by checking every `10 sec`.\n@purge(enable='true', interval='10 sec', idle.period='1 hour')\n-- Partitions the events based on `userID`.\npartition with ( userID of LoginStream )\n\nbegin\n    @info(name='Aggregation-query')\n-- Calculates success and failure login attempts from last 3 events of each `userID`.\n    insert into #LoginAttempts\n    select userID, loginSuccessful, count() as attempts\n    from LoginStream#window.length(3)\n    group by loginSuccessful;\n-- Inserts results to `#LoginAttempts` inner stream that is only accessible within the partition instance.\n    \n\n\n    @info(name='Alert-query')\n-- Consumes events from the inner stream, and suspends `userID`s that have 3 consecutive login failures.\n    insert into UserSuspensionStream\n    select userID, \"3 consecutive login failures!\" as message\n    from #LoginAttempts[loginSuccessful==false and attempts==3];\n\nend;\n")),(0,i.kt)("h3",{id:"partition-behavior"},"Partition Behavior"),(0,i.kt)("p",null,"When events are sent to ",(0,i.kt)("inlineCode",{parentName:"p"},"LoginStream")," stream, following events will be generated at ",(0,i.kt)("inlineCode",{parentName:"p"},"#LoginAttempts")," inner stream via ",(0,i.kt)("inlineCode",{parentName:"p"},"Aggregation-query")," query, and ",(0,i.kt)("inlineCode",{parentName:"p"},"UserSuspensionStream")," stream via ",(0,i.kt)("inlineCode",{parentName:"p"},"Alert-query")," query."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Input to ",(0,i.kt)("inlineCode",{parentName:"th"},"TemperatureStream")),(0,i.kt)("th",{parentName:"tr",align:null},"At ",(0,i.kt)("inlineCode",{parentName:"th"},"#LoginAttempts")),(0,i.kt)("th",{parentName:"tr",align:null},"Output at ",(0,i.kt)("inlineCode",{parentName:"th"},"UserSuspensionStream")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"false"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"false"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"1"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"-")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"true"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"true"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"1"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"-")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"false"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"false"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"1"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"-")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"false"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"false"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"2"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"-")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"false"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"false"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"2"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"-")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"true"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"true"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"1"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"-")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"false"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1001'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"false"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"2"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"-")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"false"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"false"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"2"),"]"),(0,i.kt)("td",{parentName:"tr",align:null},"[",(0,i.kt)("inlineCode",{parentName:"td"},"'1002'"),", ",(0,i.kt)("inlineCode",{parentName:"td"},"'3 consecutive login failures!'"),"]")))),(0,i.kt)("h2",{id:"scatter-and-gather-string"},"Scatter and Gather (String)"),(0,i.kt)("p",null,"This example shows performing scatter and gather on string values."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE STREAM PurchaseStream (userId string, items string, store string);\n\n@info(name = 'Scatter-query')\n-- Scatter value of `items` in to separate events by `,`.\ninsert into TokenizedItemStream\nselect userId, token as item, store\nfrom PurchaseStream#str:tokenize(items, ',', true);\n\n@info(name = 'Transform-query')\n-- Concat tokenized `item` with `store`.\ninsert into TransformedItemStream\nselect userId, str:concat(store, \"-\", item) as itemKey\nfrom TokenizedItemStream;\n\n@info(name = 'Gather-query')\ninsert into GroupedPurchaseItemStream\n-- Concat all events in a batch separating them by `,`.\nselect userId, str:groupConcat(itemKey, \",\") as itemKeys\n-- Collect events traveling as a batch via `batch()` window.\nfrom TransformedItemStream#window.batch();\n")),(0,i.kt)("h3",{id:"input"},"Input"),(0,i.kt)("p",null,"The following event containing a JSON string is sent to ",(0,i.kt)("inlineCode",{parentName:"p"},"PurchaseStream"),":"),(0,i.kt)("p",null,"[",(0,i.kt)("inlineCode",{parentName:"p"},"'501'"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"'cake,cookie,bun,cookie'"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"'CA'"),"]"),(0,i.kt)("h3",{id:"output"},"Output"),(0,i.kt)("p",null,"After processing, the events arriving at ",(0,i.kt)("inlineCode",{parentName:"p"},"TokenizedItemStream")," will be as follows:"),(0,i.kt)("p",null,"[",(0,i.kt)("inlineCode",{parentName:"p"},"'501'"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"'cake'"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"'CA'"),"]",", ","[",(0,i.kt)("inlineCode",{parentName:"p"},"'501'"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"'cookie'"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"'CA'"),"]",", ","[",(0,i.kt)("inlineCode",{parentName:"p"},"'501'"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"'bun'"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"'CA'"),"]"),(0,i.kt)("p",null,"The events arriving at ",(0,i.kt)("inlineCode",{parentName:"p"},"TransformedItemStream")," will be as follows:"),(0,i.kt)("p",null,"[",(0,i.kt)("inlineCode",{parentName:"p"},"'501'"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"'CA-cake'"),"]",", ","[",(0,i.kt)("inlineCode",{parentName:"p"},"'501'"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"'CA-cookie'"),"]",", ","[",(0,i.kt)("inlineCode",{parentName:"p"},"'501'"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"'CA-bun'"),"]"),(0,i.kt)("p",null,"The event arriving at ",(0,i.kt)("inlineCode",{parentName:"p"},"GroupedPurchaseItemStream")," will be as follows:"),(0,i.kt)("p",null,"[",(0,i.kt)("inlineCode",{parentName:"p"},"'501'"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"'CA-cake,CA-cookie,CA-bun'"),"]"),(0,i.kt)("h2",{id:"scatter-and-gather-json"},"Scatter and Gather (JSON)"),(0,i.kt)("p",null,"This example shows performing scatter and gather on string values."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},'CREATE STREAM PurchaseStream (order string, store string);\n\n@info(name = \'Scatter-query\')\n-- Scatter elements under `$.order.items` in to separate events.\ninsert into TokenizedItemStream\nselect json:getString(order, \'$.order.id\') as orderId,\n       jsonElement as item,\n       store\nfrom PurchaseStream#json:tokenize(order, \'$.order.items\');\n\n\n@info(name = \'Transform-query\')\n-- Provide `$5` discount to cakes.\ninsert into DiscountedItemStream\nselect orderId,\n       ifThenElse(json:getString(item, \'name\') == "cake",\n                  json:toString(\n                    json:setElement(item, \'price\',\n                      json:getDouble(item, \'price\') - 5\n                    )\n                  ),\n                  item) as item,\n       store\nfrom TokenizedItemStream;\n\n\n@info(name = \'Gather-query\')\ninsert into GroupedItemStream\n-- Combine `item` from all events in a batch as a single JSON Array.\nselect orderId, json:group(item) as items, store\n-- Collect events traveling as a batch via `batch()` window.\nfrom DiscountedItemStream#window.batch();\n\n\n@info(name = \'Format-query\')\ninsert into DiscountedOrderStream\n-- Format the final JSON by combining `orderId`, `items`, and `store`.\nselect str:fillTemplate("""\n    {"discountedOrder":\n        {"id":"{{1}}", "store":"{{3}}", "items":{{2}} }\n    }""", orderId, items, store) as discountedOrder\nfrom GroupedItemStream;\n')),(0,i.kt)("h3",{id:"input-1"},"Input"),(0,i.kt)("p",null,"Below event is sent to ",(0,i.kt)("inlineCode",{parentName:"p"},"PurchaseStream"),","),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'[{\n   "order":{\n      "id":"501",\n      "items":[{"name":"cake", "price":25.0},\n               {"name":"cookie", "price":15.0},\n               {"name":"bun", "price":20.0}\n      ]\n   }\n}, \'CA\']\n')),(0,i.kt)("h3",{id:"output-1"},"Output"),(0,i.kt)("p",null,"After processing, following events arrive at ",(0,i.kt)("inlineCode",{parentName:"p"},"TokenizedItemStream"),":"),(0,i.kt)("p",null,"[",(0,i.kt)("inlineCode",{parentName:"p"},"'501'"),", ",(0,i.kt)("inlineCode",{parentName:"p"},'\'{"name":"cake","price":25.0}\''),", ",(0,i.kt)("inlineCode",{parentName:"p"},"'CA'"),"]",",",(0,i.kt)("br",null),"\n","[",(0,i.kt)("inlineCode",{parentName:"p"},"'501'"),", ",(0,i.kt)("inlineCode",{parentName:"p"},'\'{"name":"cookie","price":15.0}\''),", ",(0,i.kt)("inlineCode",{parentName:"p"},"'CA'"),"]",",",(0,i.kt)("br",null),"\n","[",(0,i.kt)("inlineCode",{parentName:"p"},"'501'"),", ",(0,i.kt)("inlineCode",{parentName:"p"},'\'{"name":"bun","price":20.0}\''),", ",(0,i.kt)("inlineCode",{parentName:"p"},"'CA'"),"]"),(0,i.kt)("p",null,"The events arriving at ",(0,i.kt)("inlineCode",{parentName:"p"},"DiscountedItemStream")," will be as follows:"),(0,i.kt)("p",null,"[",(0,i.kt)("inlineCode",{parentName:"p"},"'501'"),", ",(0,i.kt)("inlineCode",{parentName:"p"},'\'{"name":"cake","price":20.0}\''),", ",(0,i.kt)("inlineCode",{parentName:"p"},"'CA'"),"]",",",(0,i.kt)("br",null),"\n","[",(0,i.kt)("inlineCode",{parentName:"p"},"'501'"),", ",(0,i.kt)("inlineCode",{parentName:"p"},'\'{"name":"cookie","price":15.0}\''),", ",(0,i.kt)("inlineCode",{parentName:"p"},"'CA'"),"]",",",(0,i.kt)("br",null),"\n","[",(0,i.kt)("inlineCode",{parentName:"p"},"'501'"),", ",(0,i.kt)("inlineCode",{parentName:"p"},'\'{"name":"bun","price":20.0}\''),", ",(0,i.kt)("inlineCode",{parentName:"p"},"'CA'"),"]"),(0,i.kt)("p",null,"The event arriving at ",(0,i.kt)("inlineCode",{parentName:"p"},"GroupedItemStream")," will be as follows:"),(0,i.kt)("p",null,"[",(0,i.kt)("inlineCode",{parentName:"p"},"'501'"),", ",(0,i.kt)("inlineCode",{parentName:"p"},'\'[{"price":20.0,"name":"cake"},{"price":15.0,"name":"cookie"},{"price":20.0,"name":"bun"}]\''),", ",(0,i.kt)("inlineCode",{parentName:"p"},"'CA'"),"]"),(0,i.kt)("p",null,"The event arriving at ",(0,i.kt)("inlineCode",{parentName:"p"},"DiscountedOrderStream")," will be as follows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'    [\n        {"discountedOrder":\n            {\n                "id":"501",\n                "store":"CA",\n                "items":[{"price":20.0,"name":"cake"},\n                        {"price":15.0,"name":"cookie"},\n                        {"price":20.0,"name":"bun"}] \n            }\n        }\n    ]\n')))}k.isMDXComponent=!0}}]);