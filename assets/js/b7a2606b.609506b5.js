"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4112],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return f}});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),y=s(r),f=i,m=y["".concat(l,".").concat(f)]||y[f]||p[f]||o;return r?n.createElement(m,a(a({ref:t},u),{},{components:r})):n.createElement(m,a({ref:t},u))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=y;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var s=2;s<o;s++)a[s]=r[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}y.displayName="MDXCreateElement"},46948:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return c},metadata:function(){return s},toc:function(){return p}});var n=r(87462),i=r(63366),o=(r(67294),r(3905)),a=["components"],c={sidebar_position:10,title:"Queries Without Collections"},l=void 0,s={unversionedId:"c8ql/examples/queries-without-collections",id:"c8ql/examples/queries-without-collections",title:"Queries Without Collections",description:"Following is a query that returns a string value. The result string is contained in an array because the result of every valid query is an array:",source:"@site/docs/c8ql/examples/queries-without-collections.md",sourceDirName:"c8ql/examples",slug:"/c8ql/examples/queries-without-collections",permalink:"/docs/c8ql/examples/queries-without-collections",draft:!1,editUrl:"https://github.com/macrometacorp/docs/edit/master/docs/c8ql/examples/queries-without-collections.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10,title:"Queries Without Collections"},sidebar:"tutorialSidebar",previous:{title:"Projections & Filters",permalink:"/docs/c8ql/examples/projections-and-filters"},next:{title:"Remove Vertex",permalink:"/docs/c8ql/examples/remove-vertex"}},u={},p=[],y={toc:p};function f(e){var t=e.components,r=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,n.Z)({},y,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Following is a query that returns a string value. The result string is contained in an array because the result of every valid query is an array:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'RETURN "this will be returned"\n[ \n  "this will be returned" \n]\n')),(0,o.kt)("p",null,"Here is a query that creates the cross products of two arrays and runs a projection on it, using a few of C8QL's built-in functions:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'FOR year in [ 2011, 2012, 2013 ]\n  FOR quarter IN [ 1, 2, 3, 4 ]\n    RETURN { \n      "y" : "year", \n      "q" : quarter, \n      "nice" : CONCAT(quarter, "/", year) \n    }\n[ \n  { "y" : "year", "q" : 1, "nice" : "1/2011" }, \n  { "y" : "year", "q" : 2, "nice" : "2/2011" }, \n  { "y" : "year", "q" : 3, "nice" : "3/2011" }, \n  { "y" : "year", "q" : 4, "nice" : "4/2011" }, \n  { "y" : "year", "q" : 1, "nice" : "1/2012" }, \n  { "y" : "year", "q" : 2, "nice" : "2/2012" }, \n  { "y" : "year", "q" : 3, "nice" : "3/2012" }, \n  { "y" : "year", "q" : 4, "nice" : "4/2012" }, \n  { "y" : "year", "q" : 1, "nice" : "1/2013" }, \n  { "y" : "year", "q" : 2, "nice" : "2/2013" }, \n  { "y" : "year", "q" : 3, "nice" : "3/2013" }, \n  { "y" : "year", "q" : 4, "nice" : "4/2013" } \n]\n')))}f.isMDXComponent=!0}}]);